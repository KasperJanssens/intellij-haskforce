Haskell File
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Pragma00002')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    PsiElement(HaskellTokenType.data)('data')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Vector')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Pull')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('DIM1')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)(' UNPACK ')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellSymbolImpl(SYMBOL)
      PsiElement(HaskellTokenType.!)('!')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)(' CORE "foo" ')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('show')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)(' CORE "bar" ')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('g')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    PsiElement(HaskellTokenType.let)('let')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('xs')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)(' SCC "X" ')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    PsiElement(HaskellTokenType.integertoken)('1')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType...)('..')
    PsiElement(HaskellTokenType.integertoken)('1000000')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    PsiElement(HaskellTokenType.in)('in')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')