Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE QuasiQuotes ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      HaskellConidImpl(CONID)
        PsiElement(HaskellTokenType.conidRegexp)('TempHask00005')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellInstancedeclImpl(INSTANCEDECL)
      PsiElement(HaskellTokenType.instance)('instance')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('Yesod')
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('App')
      PsiElement(HaskellTokenType.where)('where')
      HaskellIdeclImpl(IDECL)
        HaskellFunorpatdeclImpl(FUNORPATDECL)
          HaskellVaridImpl(VARID)
            PsiElement(HaskellTokenType.varidRegexp)('defaultLayout')
          HaskellVaridImpl(VARID)
            PsiElement(HaskellTokenType.varidRegexp)('widget')
          HaskellRhsImpl(RHS)
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              PsiElement(HaskellTokenType.do)('do')
              PsiComment(HaskellTokenType.comment)('-- Parse names starting with a single quote in splices.\n')
              HaskellStmtsImpl(STMTS)
                HaskellPatImpl(PAT)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('pc')
                PsiElement(HaskellTokenType.<-)('<-')
                HaskellExpImpl(EXP)
                  HaskellQvarImpl(QVAR)
                    HaskellQvaridImpl(QVARID)
                      HaskellVaridImpl(VARID)
                        PsiElement(HaskellTokenType.varidRegexp)('widgetToPageContent')
                  HaskellQopImpl(QOP)
                    HaskellQvaropImpl(QVAROP)
                      HaskellQvarsymImpl(QVARSYM)
                        HaskellVarsymImpl(VARSYM)
                          PsiElement(HaskellTokenType.$)('$')
                  PsiElement(HaskellTokenType.do)('do')
                  HaskellStmtsImpl(STMTS)
                    HaskellExpImpl(EXP)
                      PsiElement(HaskellTokenType.$()('$(')
                      HaskellExpImpl(EXP)
                        HaskellQvarImpl(QVAR)
                          HaskellQvaridImpl(QVARID)
                            HaskellVaridImpl(VARID)
                              PsiElement(HaskellTokenType.varidRegexp)('combineStylesheets')
                        PsiElement(HaskellTokenType.')(''')
                        HaskellQconImpl(QCON)
                          HaskellQconidImpl(QCONID)
                            HaskellConidImpl(CONID)
                              PsiElement(HaskellTokenType.conidRegexp)('StaticR')
                        PsiElement(HaskellTokenType.[)('[')
                        HaskellExpImpl(EXP)
                          HaskellQvarImpl(QVAR)
                            HaskellQvaridImpl(QVARID)
                              HaskellVaridImpl(VARID)
                                PsiElement(HaskellTokenType.varidRegexp)('css_normalize_css')
                        PsiElement(HaskellTokenType.,)(',')
                        HaskellExpImpl(EXP)
                          HaskellQvarImpl(QVAR)
                            HaskellQvaridImpl(QVARID)
                              HaskellVaridImpl(VARID)
                                PsiElement(HaskellTokenType.varidRegexp)('css_bootstrap_css')
                        PsiElement(HaskellTokenType.])(']')
                      PsiElement(HaskellTokenType.))(')')
                    HaskellExpImpl(EXP)
                      PsiElement(HaskellTokenType.$()('$(')
                      HaskellExpImpl(EXP)
                        HaskellQvarImpl(QVAR)
                          HaskellQvaridImpl(QVARID)
                            HaskellVaridImpl(VARID)
                              PsiElement(HaskellTokenType.varidRegexp)('widgetFile')
                        HaskellPstringtokenImpl(PSTRINGTOKEN)
                          PsiElement(HaskellTokenType.")('"')
                          PsiElement(HaskellTokenType.STRINGTOKEN)('default-layout')
                          PsiElement(HaskellTokenType.")('"')
                      PsiElement(HaskellTokenType.))(')')
                HaskellExpImpl(EXP)
                  HaskellQvarImpl(QVAR)
                    HaskellQvaridImpl(QVARID)
                      HaskellVaridImpl(VARID)
                        PsiElement(HaskellTokenType.varidRegexp)('giveUrlRenderer')
                  PsiElement(HaskellTokenType.$()('$(')
                  HaskellExpImpl(EXP)
                    HaskellQvarImpl(QVAR)
                      HaskellQvaridImpl(QVARID)
                        HaskellVaridImpl(VARID)
                          PsiElement(HaskellTokenType.varidRegexp)('hamletFile')
                    HaskellPstringtokenImpl(PSTRINGTOKEN)
                      PsiElement(HaskellTokenType.")('"')
                      PsiElement(HaskellTokenType.STRINGTOKEN)('templates/default-layout-wrapper.hamlet')
                      PsiElement(HaskellTokenType.")('"')
                  PsiElement(HaskellTokenType.))(')')