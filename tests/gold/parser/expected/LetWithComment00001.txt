Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('LetWithComment00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('f')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          LETEXP
            PsiElement(HaskellTokenType.let)('let')
            FUNORPATDECL
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
              RHS
                PsiElement(HaskellTokenType.=)('=')
                EXP
                  PsiElement(HaskellTokenType.integertoken)('7')
            PsiComment(HaskellTokenType.{-)('{-')
            PsiComment(HaskellTokenType.commenttext)('Comment, comment?')
            PsiComment(HaskellTokenType.-})('-}')
            FUNORPATDECL
              PAT
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('b')
              RHS
                PsiElement(HaskellTokenType.=)('=')
                EXP
                  PsiElement(HaskellTokenType.integertoken)('9')
            PsiElement(HaskellTokenType.in)('in')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              QOP
                QVAROP
                  QVARSYM
                    VARSYM
                      PsiElement(HaskellTokenType.+)('+')
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('b')