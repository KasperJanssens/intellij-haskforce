Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE ViewPatterns ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE TypeOperators')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE RankNTypes ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE FlexibleContexts ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE UnboxedTuples ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      HaskellConidImpl(CONID)
        PsiElement(HaskellTokenType.conidRegexp)('Fun00004')
    PsiElement(HaskellTokenType.where)('where')
  PsiComment(HaskellTokenType.comment)('-- | A record with options for explicit passing in rewrite rules.\n')
  HaskellBodyImpl(BODY)
    HaskellDatadeclImpl(DATADECL)
      PsiElement(HaskellTokenType.data)('data')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('FeldOpts')
      PsiElement(HaskellTokenType.=)('=')
      HaskellConstrImpl(CONSTR)
        HaskellConImpl(CON)
          HaskellConidImpl(CONID)
            PsiElement(HaskellTokenType.conidRegexp)('FeldOpts')
        PsiElement(HaskellTokenType.{)('{')
        HaskellVarsImpl(VARS)
          HaskellVaridImpl(VARID)
            PsiElement(HaskellTokenType.varidRegexp)('targets')
        PsiElement(HaskellTokenType.::)('::')
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            PsiElement(HaskellTokenType.[)('[')
            HaskellCtypeImpl(CTYPE)
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellOqtyconImpl(OQTYCON)
                    HaskellQtyconImpl(QTYCON)
                      HaskellTyconImpl(TYCON)
                        HaskellConidImpl(CONID)
                          PsiElement(HaskellTokenType.conidRegexp)('Target')
            PsiElement(HaskellTokenType.])(']')
        PsiElement(HaskellTokenType.})('}')
    PsiComment(HaskellTokenType.comment)('-- | Default options.\n')
    HaskellGendeclImpl(GENDECL)
      HaskellVarsImpl(VARS)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('defaultFeldOpts')
      PsiElement(HaskellTokenType.::)('::')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('FeldOpts')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('defaultFeldOpts')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQconImpl(QCON)
            HaskellQconidImpl(QCONID)
              HaskellConidImpl(CONID)
                PsiElement(HaskellTokenType.conidRegexp)('FeldOpts')
          PsiElement(HaskellTokenType.{)('{')
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('targets')
          PsiElement(HaskellTokenType.=)('=')
          HaskellExpImpl(EXP)
            PsiElement(HaskellTokenType.[)('[')
            PsiElement(HaskellTokenType.])(']')
          PsiElement(HaskellTokenType.})('}')
    PsiComment(HaskellTokenType.comment)('-- | Insert a variable into the environment\n')
    HaskellGendeclImpl(GENDECL)
      HaskellVarsImpl(VARS)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('localVar')
      PsiElement(HaskellTokenType.::)('::')
      HaskellCtypeImpl(CTYPE)
        HaskellContextImpl(CONTEXT)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('Typeable')
          HaskellAtypeImpl(ATYPE)
            HaskellTyvarImpl(TYVAR)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('b')
        PsiElement(HaskellTokenType.=>)('=>')
        HaskellCtypeImpl(CTYPE)
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellOqtyconImpl(OQTYCON)
                HaskellQtyconImpl(QTYCON)
                  HaskellTyconImpl(TYCON)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('VarId')
            PsiElement(HaskellTokenType.->)('->')
            HaskellTypeeImpl(TYPEE)
              HaskellAtypeImpl(ATYPE)
                HaskellOqtyconImpl(OQTYCON)
                  HaskellQtyconImpl(QTYCON)
                    HaskellTyconImpl(TYCON)
                      HaskellConidImpl(CONID)
                        PsiElement(HaskellTokenType.conidRegexp)('Info')
              HaskellAtypeImpl(ATYPE)
                HaskellTyvarImpl(TYVAR)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('b')
              PsiElement(HaskellTokenType.->)('->')
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellOqtyconImpl(OQTYCON)
                    HaskellQtyconImpl(QTYCON)
                      HaskellTyconImpl(TYCON)
                        HaskellConidImpl(CONID)
                          PsiElement(HaskellTokenType.conidRegexp)('Opt')
                HaskellAtypeImpl(ATYPE)
                  HaskellTyvarImpl(TYVAR)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.->)('->')
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    HaskellOqtyconImpl(OQTYCON)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('Opt')
                  HaskellAtypeImpl(ATYPE)
                    HaskellTyvarImpl(TYVAR)
                      HaskellVaridImpl(VARID)
                        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('localVar')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('v')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('info')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('local')
          HaskellQopImpl(QOP)
            HaskellQvaropImpl(QVAROP)
              HaskellQvarsymImpl(QVARSYM)
                HaskellVarsymImpl(VARSYM)
                  PsiElement(HaskellTokenType.$)('$')
          PsiElement(HaskellTokenType.\)('\')
          HaskellVaridImpl(VARID)
            PsiElement(HaskellTokenType.varidRegexp)('env')
          PsiElement(HaskellTokenType.->)('->')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('env')
            PsiElement(HaskellTokenType.{)('{')
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('varEnv')
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              PsiElement(HaskellTokenType.()('(')
              HaskellExpImpl(EXP)
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('v')
              PsiElement(HaskellTokenType.,)(',')
              HaskellExpImpl(EXP)
                HaskellQconImpl(QCON)
                  HaskellQconidImpl(QCONID)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('SomeInfo')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('info')
              PsiElement(HaskellTokenType.))(')')
              HaskellQopImpl(QOP)
                HaskellQvaropImpl(QVAROP)
                  HaskellQvarsymImpl(QVARSYM)
                    HaskellVarsymImpl(VARSYM)
                      PsiElement(HaskellTokenType.:)(':')
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('varEnv')
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('env')
            PsiElement(HaskellTokenType.})('}')
    PsiComment(HaskellTokenType.comment)('-- | It the expression is a literal, its value is returned, otherwise 'Nothing'\n')
    HaskellGendeclImpl(GENDECL)
      HaskellVarsImpl(VARS)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('viewLiteral')
      PsiElement(HaskellTokenType.::)('::')
      HaskellCtypeImpl(CTYPE)
        PsiElement(HaskellTokenType.forall)('forall')
        HaskellTvBndrImpl(TV_BNDR)
          HaskellTyvarImpl(TYVAR)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('info')
        HaskellTvBndrImpl(TV_BNDR)
          HaskellTyvarImpl(TYVAR)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('dom')
        HaskellTvBndrImpl(TV_BNDR)
          HaskellTyvarImpl(TYVAR)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType..)('.')
        HaskellCtypeImpl(CTYPE)
          HaskellContextImpl(CONTEXT)
            HaskellAtypeImpl(ATYPE)
              PsiElement(HaskellTokenType.()('(')
              HaskellCtypeImpl(CTYPE)
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    PsiElement(HaskellTokenType.()('(')
                    HaskellCtypeImpl(CTYPE)
                      HaskellTypeeImpl(TYPEE)
                        HaskellAtypeImpl(ATYPE)
                          HaskellOqtyconImpl(OQTYCON)
                            HaskellQtyconImpl(QTYCON)
                              HaskellTyconImpl(TYCON)
                                HaskellConidImpl(CONID)
                                  PsiElement(HaskellTokenType.conidRegexp)('Literal')
                        HaskellQtyconopImpl(QTYCONOP)
                          HaskellQtyconsymImpl(QTYCONSYM)
                            HaskellQconsymImpl(QCONSYM)
                              HaskellConsymImpl(CONSYM)
                                PsiElement(HaskellTokenType.Consym)(':||')
                        HaskellTypeeImpl(TYPEE)
                          HaskellAtypeImpl(ATYPE)
                            HaskellOqtyconImpl(OQTYCON)
                              HaskellQtyconImpl(QTYCON)
                                HaskellTyconImpl(TYCON)
                                  HaskellConidImpl(CONID)
                                    PsiElement(HaskellTokenType.conidRegexp)('Type')
                    PsiElement(HaskellTokenType.))(')')
                  HaskellQtyconopImpl(QTYCONOP)
                    HaskellQtyconsymImpl(QTYCONSYM)
                      HaskellQconsymImpl(QCONSYM)
                        HaskellConsymImpl(CONSYM)
                          PsiElement(HaskellTokenType.Consym)(':<:')
                  HaskellTypeeImpl(TYPEE)
                    HaskellAtypeImpl(ATYPE)
                      HaskellTyvarImpl(TYVAR)
                        HaskellVaridImpl(VARID)
                          PsiElement(HaskellTokenType.varidRegexp)('dom')
              PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.=>)('=>')
          HaskellCtypeImpl(CTYPE)
            HaskellTypeeImpl(TYPEE)
              HaskellAtypeImpl(ATYPE)
                HaskellOqtyconImpl(OQTYCON)
                  HaskellQtyconImpl(QTYCON)
                    HaskellTyconImpl(TYCON)
                      HaskellConidImpl(CONID)
                        PsiElement(HaskellTokenType.conidRegexp)('ASTF')
              HaskellAtypeImpl(ATYPE)
                PsiElement(HaskellTokenType.()('(')
                HaskellCtypeImpl(CTYPE)
                  HaskellTypeeImpl(TYPEE)
                    HaskellAtypeImpl(ATYPE)
                      HaskellOqtyconImpl(OQTYCON)
                        HaskellQtyconImpl(QTYCON)
                          HaskellTyconImpl(TYCON)
                            HaskellConidImpl(CONID)
                              PsiElement(HaskellTokenType.conidRegexp)('Decor')
                    HaskellAtypeImpl(ATYPE)
                      HaskellTyvarImpl(TYVAR)
                        HaskellVaridImpl(VARID)
                          PsiElement(HaskellTokenType.varidRegexp)('info')
                    HaskellAtypeImpl(ATYPE)
                      PsiElement(HaskellTokenType.()('(')
                      HaskellCtypeImpl(CTYPE)
                        HaskellTypeeImpl(TYPEE)
                          HaskellAtypeImpl(ATYPE)
                            HaskellTyvarImpl(TYVAR)
                              HaskellVaridImpl(VARID)
                                PsiElement(HaskellTokenType.varidRegexp)('dom')
                          HaskellQtyconopImpl(QTYCONOP)
                            HaskellQtyconsymImpl(QTYCONSYM)
                              HaskellQconsymImpl(QCONSYM)
                                HaskellConsymImpl(CONSYM)
                                  PsiElement(HaskellTokenType.Consym)(':||')
                          HaskellTypeeImpl(TYPEE)
                            HaskellAtypeImpl(ATYPE)
                              HaskellOqtyconImpl(OQTYCON)
                                HaskellQtyconImpl(QTYCON)
                                  HaskellTyconImpl(TYCON)
                                    HaskellConidImpl(CONID)
                                      PsiElement(HaskellTokenType.conidRegexp)('Typeable')
                      PsiElement(HaskellTokenType.))(')')
                PsiElement(HaskellTokenType.))(')')
              HaskellAtypeImpl(ATYPE)
                HaskellTyvarImpl(TYVAR)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellOqtyconImpl(OQTYCON)
                    HaskellQtyconImpl(QTYCON)
                      HaskellTyconImpl(TYCON)
                        HaskellConidImpl(CONID)
                          PsiElement(HaskellTokenType.conidRegexp)('Maybe')
                HaskellAtypeImpl(ATYPE)
                  HaskellTyvarImpl(TYVAR)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('viewLiteral')
      PsiElement(HaskellTokenType.()('(')
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('prjF')
      PsiElement(HaskellTokenType.->)('->')
      HaskellPatImpl(PAT)
        HaskellQconImpl(QCON)
          HaskellQconidImpl(QCONID)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Just')
        PsiElement(HaskellTokenType.()('(')
        HaskellPatImpl(PAT)
          HaskellQconImpl(QCON)
            HaskellQconidImpl(QCONID)
              HaskellConidImpl(CONID)
                PsiElement(HaskellTokenType.conidRegexp)('C'')
          PsiElement(HaskellTokenType.()('(')
          HaskellPatImpl(PAT)
            HaskellQconImpl(QCON)
              HaskellQconidImpl(QCONID)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('Literal')
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.))(')')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQconImpl(QCON)
            HaskellQconidImpl(QCONID)
              HaskellConidImpl(CONID)
                PsiElement(HaskellTokenType.conidRegexp)('Just')
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('viewLiteral')
      PsiElement(HaskellTokenType._)('_')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQconImpl(QCON)
            HaskellQconidImpl(QCONID)
              HaskellConidImpl(CONID)
                PsiElement(HaskellTokenType.conidRegexp)('Nothing')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('g')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          PsiElement(HaskellTokenType.(#)('(#')
          PsiElement(HaskellTokenType.#))('#)')