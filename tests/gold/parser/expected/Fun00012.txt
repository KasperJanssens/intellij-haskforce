Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE TypeFamilies ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE GADTs ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE TransformListComp ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      HaskellConidImpl(CONID)
        PsiElement(HaskellTokenType.conidRegexp)('Fun00012')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellDatadeclImpl(DATADECL)
      PsiElement(HaskellTokenType.data)('data')
      PsiElement(HaskellTokenType.instance)('instance')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('A')
      PsiElement(HaskellTokenType.=)('=')
      HaskellConstrImpl(CONSTR)
        HaskellConImpl(CON)
          PsiElement(HaskellTokenType.conidRegexp)('M')
        PsiElement(HaskellTokenType.{)('{')
        HaskellVarsImpl(VARS)
          HaskellVaridImpl(VARID)
            PsiElement(HaskellTokenType.varidRegexp)('unA')
        PsiElement(HaskellTokenType.::)('::')
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('T')
          PsiElement(HaskellTokenType.->)('->')
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellOqtyconImpl(OQTYCON)
                HaskellQtyconImpl(QTYCON)
                  HaskellTyconImpl(TYCON)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('A')
        PsiElement(HaskellTokenType.})('}')
    HaskellDatadeclImpl(DATADECL)
      PsiElement(HaskellTokenType.data)('data')
      PsiElement(HaskellTokenType.instance)('instance')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('B')
      PsiElement(HaskellTokenType.where)('where')
      HaskellConImpl(CON)
        PsiElement(HaskellTokenType.conidRegexp)('K')
      PsiElement(HaskellTokenType.::)('::')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('D')
          PsiElement(HaskellTokenType.->)('->')
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellOqtyconImpl(OQTYCON)
                HaskellQtyconImpl(QTYCON)
                  HaskellTyconImpl(TYCON)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('B')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('f')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          PsiElement(HaskellTokenType.[)('[')
          HaskellExpImpl(EXP)
            PsiElement(HaskellTokenType.()('(')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.,)(',')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.|)('|')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('x')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.,)(',')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('y')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('ys')
          PsiElement(HaskellTokenType.,)(',')
          PsiElement(HaskellTokenType.then)('then')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('sortWith')
          PsiElement(HaskellTokenType.])(']')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('g')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          PsiElement(HaskellTokenType.[)('[')
          HaskellExpImpl(EXP)
            PsiElement(HaskellTokenType.()('(')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.,)(',')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.|)('|')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('x')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.,)(',')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('y')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('ys')
          PsiElement(HaskellTokenType.,)(',')
          PsiElement(HaskellTokenType.then)('then')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('sortWith')
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('by')
            PsiElement(HaskellTokenType.()('(')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('x')
              HaskellQopImpl(QOP)
                HaskellQvaropImpl(QVAROP)
                  HaskellQvarsymImpl(QVARSYM)
                    HaskellVarsymImpl(VARSYM)
                      PsiElement(HaskellTokenType.+)('+')
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.])(']')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('h')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          PsiElement(HaskellTokenType.[)('[')
          HaskellExpImpl(EXP)
            PsiElement(HaskellTokenType.()('(')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.,)(',')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.|)('|')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('x')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.,)(',')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('y')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('ys')
          PsiElement(HaskellTokenType.,)(',')
          PsiElement(HaskellTokenType.then)('then')
          PsiElement(HaskellTokenType.varidRegexp)('group')
          PsiElement(HaskellTokenType.varidRegexp)('using')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('permutations')
          PsiElement(HaskellTokenType.])(']')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('i')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          PsiElement(HaskellTokenType.[)('[')
          HaskellExpImpl(EXP)
            PsiElement(HaskellTokenType.()('(')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('x')
            PsiElement(HaskellTokenType.,)(',')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.|)('|')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('x')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.,)(',')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('y')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('ys')
          PsiElement(HaskellTokenType.,)(',')
          PsiElement(HaskellTokenType.then)('then')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('group')
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('by')
            PsiElement(HaskellTokenType.()('(')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('x')
              HaskellQopImpl(QOP)
                HaskellQvaropImpl(QVAROP)
                  HaskellQvarsymImpl(QVARSYM)
                    HaskellVarsymImpl(VARSYM)
                      PsiElement(HaskellTokenType.+)('+')
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.))(')')
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('using')
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('groupWith')
          PsiElement(HaskellTokenType.])(']')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)(' RULES "f" f True = False ')
      PsiElement(HaskellTokenType.#-})('#-}')