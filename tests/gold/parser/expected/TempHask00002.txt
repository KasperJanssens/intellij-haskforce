Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE FlexibleInstances ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE QuasiQuotes       ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE TemplateHaskell   ')
    PsiElement(HaskellTokenType.#-})('#-}')
  PsiElement(HaskellTokenType.module)('module')
  HaskellQconidImpl(QCONID)
    PsiElement(HaskellTokenType.conid)('TempHask00002')
  PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('undefined')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('something')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('here')
    HaskellPstringtokenImpl(PSTRINGTOKEN)
      PsiElement(HaskellTokenType.")('"')
      PsiElement(HaskellTokenType.STRINGTOKEN)('hello world')
      PsiElement(HaskellTokenType.")('"')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    PsiElement(HaskellTokenType.integertoken)('7')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('d')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    PsiElement(HaskellTokenType.integertoken)('7')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('t')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Int')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('p')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    PsiElement(HaskellTokenType.integertoken)('7')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.$)('$')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('deriveStuff')
  PsiErrorElement:<cpp>, <qconsym>, <qvarid>, <qvarsym>, <reservedop>, <special>, <whitechar>, HaskellTokenType.", HaskellTokenType.`, HaskellTokenType.as, HaskellTokenType.case, HaskellTokenType.chartoken, HaskellTokenType.class, HaskellTokenType.comment, HaskellTokenType.conid, HaskellTokenType.data, HaskellTokenType.default, HaskellTokenType.deriving, HaskellTokenType.do, HaskellTokenType.else, HaskellTokenType.export, HaskellTokenType.floattoken, HaskellTokenType.foreign, HaskellTokenType.haddock, HaskellTokenType.if, HaskellTokenType.import, HaskellTokenType.in, HaskellTokenType.infix, HaskellTokenType.infixl, HaskellTokenType.infixr, HaskellTokenType.instance, HaskellTokenType.integertoken, HaskellTokenType.let, HaskellTokenType.newtype, HaskellTokenType.of, HaskellTokenType.then, HaskellTokenType.type, HaskellTokenType.where, HaskellTokenType.{-, HaskellTokenType.{-# or _ expected, got '''
    PsiElement(HaskellTokenType.')(''')
  PsiElement(DUMMY_BLOCK)
    PsiElement(HaskellTokenType.varidRegexp)('f')
    PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.varidRegexp)('m')
    PsiElement(HaskellTokenType.=)('=')
    PsiElement(HaskellTokenType.$)('$')
    PsiElement(HaskellTokenType.varidRegexp)('x')
    PsiElement(HaskellTokenType.'')('''')
    PsiElement(HaskellTokenType.conid)('T')
    PsiElement(HaskellTokenType.varidRegexp)('f')
    PsiElement(HaskellTokenType.varidRegexp)('n')
  PsiElement(DUMMY_BLOCK)
    PsiElement(HaskellTokenType.=)('=')
    PsiElement(HaskellTokenType.\)('\')
    PsiElement(HaskellTokenType.[)('[')
    PsiElement(HaskellTokenType.varidRegexp)('haskell')
    PsiElement(HaskellTokenType.|)('|')
    PsiElement(HaskellTokenType.varidRegexp)('y')
    PsiElement(HaskellTokenType.|)('|')
    PsiElement(HaskellTokenType.])(']')
    PsiElement(HaskellTokenType.->)('->')
    PsiElement(HaskellTokenType.varidRegexp)('y')
  PsiElement(HaskellTokenType.+)('+')
  PsiElement(HaskellTokenType.varidRegexp)('n')