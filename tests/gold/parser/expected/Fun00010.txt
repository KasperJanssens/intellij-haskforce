Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE RecordWildCards ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE NamedFieldPuns ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Fun00010')
    HaskellExportsImpl(EXPORTS)
      PsiElement(HaskellTokenType.()('(')
      HaskellExportImpl(EXPORT)
        HaskellQtyconImpl(QTYCON)
          HaskellTyconImpl(TYCON)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Maybe')
        PsiElement(HaskellTokenType.()('(')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      HaskellExportImpl(EXPORT)
        HaskellQvarImpl(QVAR)
          HaskellQvaridImpl(QVARID)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.,)(',')
      HaskellExportImpl(EXPORT)
        HaskellQtyconImpl(QTYCON)
          HaskellTyconImpl(TYCON)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.,)(',')
      HaskellExportImpl(EXPORT)
        HaskellQtyconImpl(QTYCON)
          HaskellTyconImpl(TYCON)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Permissions')
        HaskellCnamesImpl(CNAMES)
          PsiElement(HaskellTokenType.()('(')
          HaskellCnameImpl(CNAME)
            HaskellConImpl(CON)
              PsiElement(HaskellTokenType.conidRegexp)('Permissions')
          PsiElement(HaskellTokenType.,)(',')
          HaskellCnameImpl(CNAME)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('readable')
          PsiElement(HaskellTokenType.,)(',')
          PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
          HaskellCnameImpl(CNAME)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('writable')
          PsiElement(HaskellTokenType.,)(',')
          PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
          HaskellCnameImpl(CNAME)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('executable')
          PsiElement(HaskellTokenType.,)(',')
          PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
          HaskellCnameImpl(CNAME)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('searchable')
          PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
          PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      HaskellExportImpl(EXPORT)
        PsiElement(HaskellTokenType.module)('module')
        HaskellQconidImpl(QCONID)
          HaskellModulePrefixImpl(MODULE_PREFIX)
            PsiElement(HaskellTokenType.conidRegexp)('Data')
            PsiElement(HaskellTokenType..)('.')
            PsiElement(HaskellTokenType.conidRegexp)('GraphViz')
            PsiElement(HaskellTokenType..)('.')
            PsiElement(HaskellTokenType.conidRegexp)('Attributes')
            PsiElement(HaskellTokenType..)('.')
          PsiElement(HaskellTokenType.conidRegexp)('Colors')
      PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Roc')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.{)('{')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('url')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('url')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.})('}')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('id')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Rac')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.{)('{')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType...)('..')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.})('}')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('fun')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Ruc')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.{)('{')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.})('}')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')