Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE RecordWildCards ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE NamedFieldPuns ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      HaskellConidImpl(CONID)
        PsiElement(HaskellTokenType.conidRegexp)('Fun00010')
    HaskellExportsImpl(EXPORTS)
      PsiElement(HaskellTokenType.()('(')
      HaskellExportImpl(EXPORT)
        HaskellQtyconImpl(QTYCON)
          HaskellTyconImpl(TYCON)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Maybe')
        PsiElement(HaskellTokenType.()('(')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      HaskellExportImpl(EXPORT)
        HaskellQvarImpl(QVAR)
          HaskellQvaridImpl(QVARID)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.,)(',')
      HaskellExportImpl(EXPORT)
        HaskellQtyconImpl(QTYCON)
          HaskellTyconImpl(TYCON)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.,)(',')
      HaskellExportImpl(EXPORT)
        HaskellQtyconImpl(QTYCON)
          HaskellTyconImpl(TYCON)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Permissions')
        PsiElement(HaskellTokenType.()('(')
        HaskellConImpl(CON)
          PsiElement(HaskellTokenType.conidRegexp)('Permissions')
        PsiElement(HaskellTokenType.,)(',')
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('readable')
        PsiElement(HaskellTokenType.,)(',')
        PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('writable')
        PsiElement(HaskellTokenType.,)(',')
        PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('executable')
        PsiElement(HaskellTokenType.,)(',')
        PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('searchable')
        PsiComment(HaskellTokenType.comment)('-- :: Permissions -> Bool\n')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.,)(',')
      HaskellExportImpl(EXPORT)
        PsiElement(HaskellTokenType.module)('module')
        HaskellQconidImpl(QCONID)
          HaskellModulePrefixImpl(MODULE_PREFIX)
            PsiElement(HaskellTokenType.conidRegexp)('Data')
            PsiElement(HaskellTokenType..)('.')
            PsiElement(HaskellTokenType.conidRegexp)('GraphViz')
            PsiElement(HaskellTokenType..)('.')
            PsiElement(HaskellTokenType.conidRegexp)('Attributes')
            PsiElement(HaskellTokenType..)('.')
          HaskellConidImpl(CONID)
            PsiElement(HaskellTokenType.conidRegexp)('Colors')
      PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.()('(')
      HaskellPatImpl(PAT)
        HaskellQconImpl(QCON)
          HaskellQconidImpl(QCONID)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Roc')
        PsiElement(HaskellTokenType.{)('{')
        HaskellQvarImpl(QVAR)
          HaskellQvaridImpl(QVARID)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('url')
        PsiElement(HaskellTokenType.=)('=')
        HaskellPatImpl(PAT)
          HaskellVaridImpl(VARID)
            PsiElement(HaskellTokenType.varidRegexp)('url')
        PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.))(')')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('id')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.()('(')
      HaskellPatImpl(PAT)
        HaskellQconImpl(QCON)
          HaskellQconidImpl(QCONID)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Rac')
        PsiElement(HaskellTokenType.{)('{')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.))(')')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('fun')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.()('(')
      HaskellPatImpl(PAT)
        HaskellQconImpl(QCON)
          HaskellQconidImpl(QCONID)
            HaskellConidImpl(CONID)
              PsiElement(HaskellTokenType.conidRegexp)('Ruc')
        PsiElement(HaskellTokenType.{)('{')
        HaskellQvarImpl(QVAR)
          HaskellQvaridImpl(QVARID)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.))(')')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('a')