Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('OPTIONS_GHC')
    PsiElement(HaskellTokenType.PRAGMA)('-fglasgow-exts')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)('ANN')
    PsiElement(HaskellTokenType.PRAGMA)('module')
    PsiElement(HaskellTokenType.PRAGMA)('(Just')
    PsiElement(HaskellTokenType.PRAGMA)('"A')
    PsiElement(HaskellTokenType.PRAGMA)('`Maybe')
    PsiElement(HaskellTokenType.PRAGMA)('String'')
    PsiElement(HaskellTokenType.PRAGMA)('annotation")')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      HaskellConidImpl(CONID)
        PsiElement(HaskellTokenType.conidRegexp)('Pragma00001')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('ANN')
      PsiElement(HaskellTokenType.PRAGMA)('type')
      PsiElement(HaskellTokenType.PRAGMA)('Foo')
      PsiElement(HaskellTokenType.PRAGMA)('(Just')
      PsiElement(HaskellTokenType.PRAGMA)('"A')
      PsiElement(HaskellTokenType.PRAGMA)('`Maybe')
      PsiElement(HaskellTokenType.PRAGMA)('String'')
      PsiElement(HaskellTokenType.PRAGMA)('annotation")')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellDatadeclImpl(DATADECL)
      PsiElement(HaskellTokenType.data)('data')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('Foo')
      PsiElement(HaskellTokenType.=)('=')
      HaskellConstrImpl(CONSTR)
        HaskellConImpl(CON)
          HaskellConidImpl(CONID)
            PsiElement(HaskellTokenType.conidRegexp)('Push')
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('DIM1')
    HaskellTypedeclImpl(TYPEDECL)
      PsiElement(HaskellTokenType.type)('type')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('Vector')
        HaskellAtypeImpl(ATYPE)
          HaskellTyvarImpl(TYVAR)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.=)('=')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('Pull')
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('DIM1')
        HaskellAtypeImpl(ATYPE)
          HaskellTyvarImpl(TYVAR)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('DEPRECATED')
      PsiElement(HaskellTokenType.PRAGMA)('Vector')
      PsiElement(HaskellTokenType.PRAGMA)('"Use')
      PsiElement(HaskellTokenType.PRAGMA)('Pull')
      PsiElement(HaskellTokenType.PRAGMA)('instead"')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('unsafeVector')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('id')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('WARNING')
      PsiElement(HaskellTokenType.PRAGMA)('unsafeVector')
      PsiElement(HaskellTokenType.PRAGMA)('"This')
      PsiElement(HaskellTokenType.PRAGMA)('is')
      PsiElement(HaskellTokenType.PRAGMA)('unsafe;')
      PsiElement(HaskellTokenType.PRAGMA)('I')
      PsiElement(HaskellTokenType.PRAGMA)('hope')
      PsiElement(HaskellTokenType.PRAGMA)('you')
      PsiElement(HaskellTokenType.PRAGMA)('know')
      PsiElement(HaskellTokenType.PRAGMA)('what')
      PsiElement(HaskellTokenType.PRAGMA)('you're')
      PsiElement(HaskellTokenType.PRAGMA)('doing"')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('INLINE')
      PsiElement(HaskellTokenType.PRAGMA)('unsafeVector')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('safeVector')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('id')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('NOINLINE')
      PsiElement(HaskellTokenType.PRAGMA)('[2]')
      PsiElement(HaskellTokenType.PRAGMA)('safeVector')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('safeVector2')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('id')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('NOINLINE')
      PsiElement(HaskellTokenType.PRAGMA)('[~2]')
      PsiElement(HaskellTokenType.PRAGMA)('safeVector2')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellGendeclImpl(GENDECL)
      HaskellVarsImpl(VARS)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.::)('::')
      HaskellCtypeImpl(CTYPE)
        HaskellContextImpl(CONTEXT)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('Eq')
          HaskellAtypeImpl(ATYPE)
            HaskellTyvarImpl(TYVAR)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType.=>)('=>')
        HaskellCtypeImpl(CTYPE)
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellTyvarImpl(TYVAR)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.->)('->')
            HaskellTypeeImpl(TYPEE)
              HaskellAtypeImpl(ATYPE)
                HaskellTyvarImpl(TYVAR)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('b')
              PsiElement(HaskellTokenType.->)('->')
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellTyvarImpl(TYVAR)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('b')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.integertoken)('0')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('f')
          PsiElement(HaskellTokenType.()('(')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('a')
            HaskellQopImpl(QOP)
              HaskellQvaropImpl(QVAROP)
                HaskellQvarsymImpl(QVARSYM)
                  HaskellVarsymImpl(VARSYM)
                    PsiElement(HaskellTokenType.-)('-')
            PsiElement(HaskellTokenType.integertoken)('1')
          PsiElement(HaskellTokenType.))(')')
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('SPECIALISE')
      PsiElement(HaskellTokenType.PRAGMA)('f')
      PsiElement(HaskellTokenType.PRAGMA)('::')
      PsiElement(HaskellTokenType.PRAGMA)('Int')
      PsiElement(HaskellTokenType.PRAGMA)('->')
      PsiElement(HaskellTokenType.PRAGMA)('b')
      PsiElement(HaskellTokenType.PRAGMA)('->')
      PsiElement(HaskellTokenType.PRAGMA)('b')
      PsiElement(HaskellTokenType.#-})('#-}')
    PsiComment(HaskellTokenType.comment)('-- FIXME: Waiting for https://github.com/haskell-suite/haskell-src-exts/pull/112\n')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('g')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('INLINE_CONLIKE')
      PsiElement(HaskellTokenType.PRAGMA)('[1]')
      PsiElement(HaskellTokenType.PRAGMA)('g')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellGendeclImpl(GENDECL)
      HaskellVarsImpl(VARS)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('h')
      PsiElement(HaskellTokenType.::)('::')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellTyvarImpl(TYVAR)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.->)('->')
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellTyvarImpl(TYVAR)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('h')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('SPECIALISE')
      PsiElement(HaskellTokenType.PRAGMA)('INLINE')
      PsiElement(HaskellTokenType.PRAGMA)('[~2]')
      PsiElement(HaskellTokenType.PRAGMA)('h')
      PsiElement(HaskellTokenType.PRAGMA)('::')
      PsiElement(HaskellTokenType.PRAGMA)('Int')
      PsiElement(HaskellTokenType.PRAGMA)('->')
      PsiElement(HaskellTokenType.PRAGMA)('Int')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('i')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('ANN')
      PsiElement(HaskellTokenType.PRAGMA)('i')
      PsiElement(HaskellTokenType.PRAGMA)('(Just')
      PsiElement(HaskellTokenType.PRAGMA)('"Hello")')
      PsiElement(HaskellTokenType.#-})('#-}')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('map2')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('map')
    HaskellPpragmaImpl(PPRAGMA)
      PsiElement(HaskellTokenType.{-#)('{-#')
      PsiElement(HaskellTokenType.PRAGMA)('RULES')
      PsiElement(HaskellTokenType.PRAGMA)('"map2/map2"')
      PsiElement(HaskellTokenType.PRAGMA)('forall')
      PsiElement(HaskellTokenType.PRAGMA)('f')
      PsiElement(HaskellTokenType.PRAGMA)('g')
      PsiElement(HaskellTokenType.PRAGMA)('xs.')
      PsiElement(HaskellTokenType.PRAGMA)('map2')
      PsiElement(HaskellTokenType.PRAGMA)('f')
      PsiElement(HaskellTokenType.PRAGMA)('(map2')
      PsiElement(HaskellTokenType.PRAGMA)('g')
      PsiElement(HaskellTokenType.PRAGMA)('xs)')
      PsiElement(HaskellTokenType.PRAGMA)('=')
      PsiElement(HaskellTokenType.PRAGMA)('map2')
      PsiElement(HaskellTokenType.PRAGMA)('(f.g)')
      PsiElement(HaskellTokenType.PRAGMA)('xs')
      PsiElement(HaskellTokenType.#-})('#-}')