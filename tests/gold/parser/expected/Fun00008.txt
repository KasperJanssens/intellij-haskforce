Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE TupleSections ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      HaskellConidImpl(CONID)
        PsiElement(HaskellTokenType.conidRegexp)('Fun00008')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          PsiElement(HaskellTokenType.let)('let')
          HaskellFunorpatdeclImpl(FUNORPATDECL)
            HaskellPatImpl(PAT)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('z')
            HaskellRhsImpl(RHS)
              PsiElement(HaskellTokenType.=)('=')
              HaskellExpImpl(EXP)
                PsiElement(HaskellTokenType.if)('if')
                HaskellExpImpl(EXP)
                  HaskellQvarImpl(QVAR)
                    HaskellQvaridImpl(QVARID)
                      HaskellVaridImpl(VARID)
                        PsiElement(HaskellTokenType.varidRegexp)('x')
                PsiElement(HaskellTokenType.then)('then')
                HaskellExpImpl(EXP)
                  PsiElement(HaskellTokenType.()('(')
                  PsiElement(HaskellTokenType.integertoken)('3')
                  HaskellQopImpl(QOP)
                    HaskellQvaropImpl(QVAROP)
                      HaskellQvarsymImpl(QVARSYM)
                        HaskellVarsymImpl(VARSYM)
                          PsiElement(HaskellTokenType.^)('^')
                  PsiElement(HaskellTokenType.))(')')
                PsiElement(HaskellTokenType.else)('else')
                HaskellExpImpl(EXP)
                  PsiElement(HaskellTokenType.()('(')
                  HaskellQopImpl(QOP)
                    HaskellQvaropImpl(QVAROP)
                      HaskellQvarsymImpl(QVARSYM)
                        HaskellVarsymImpl(VARSYM)
                          PsiElement(HaskellTokenType.^)('^')
                  PsiElement(HaskellTokenType.integertoken)('8')
                  PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.in)('in')
          HaskellExpImpl(EXP)
            PsiElement(HaskellTokenType.-)('-')
            PsiElement(HaskellTokenType.integertoken)('1')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('main2')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          PsiElement(HaskellTokenType.do)('do')
          HaskellStmtsImpl(STMTS)
            HaskellPatImpl(PAT)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('h')
            PsiElement(HaskellTokenType.<-)('<-')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('ask')
            PsiElement(HaskellTokenType.let)('let')
            HaskellFunorpatdeclImpl(FUNORPATDECL)
              HaskellPatImpl(PAT)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('m')
              HaskellRhsImpl(RHS)
                PsiElement(HaskellTokenType.=)('=')
                HaskellExpImpl(EXP)
                  HaskellQvarImpl(QVAR)
                    HaskellQvaridImpl(QVARID)
                      HaskellVaridImpl(VARID)
                        PsiElement(HaskellTokenType.varidRegexp)('f')
                  HaskellQvarImpl(QVAR)
                    HaskellQvaridImpl(QVARID)
                      HaskellVaridImpl(VARID)
                        PsiElement(HaskellTokenType.varidRegexp)('h')
            HaskellExpImpl(EXP)
              PsiElement(HaskellTokenType.integertoken)('13')
            PsiComment(HaskellTokenType.comment)('--            (,,3) FIXME: Add support for tuple sections.\n')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('return')
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('m')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('g')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('xs')
          HaskellQopImpl(QOP)
            HaskellQvaropImpl(QVAROP)
              HaskellQvarsymImpl(QVARSYM)
                HaskellVarsymImpl(VARSYM)
                  PsiElement(HaskellTokenType.Varsym)('++')
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('ys')
          HaskellQopImpl(QOP)
            HaskellQvaropImpl(QVAROP)
              HaskellQvarsymImpl(QVARSYM)
                HaskellVarsymImpl(VARSYM)
                  PsiElement(HaskellTokenType.Varsym)('++')
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('zs')
          HaskellQopImpl(QOP)
            HaskellQvaropImpl(QVAROP)
              HaskellQvarsymImpl(QVARSYM)
                HaskellVarsymImpl(VARSYM)
                  PsiElement(HaskellTokenType.Varsym)('++')
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('zs'')
        PsiElement(HaskellTokenType.where)('where')
        HaskellFunorpatdeclImpl(FUNORPATDECL)
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('xs')
          HaskellRhsImpl(RHS)
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              PsiElement(HaskellTokenType.[)('[')
              HaskellExpImpl(EXP)
                PsiElement(HaskellTokenType.integertoken)('1')
              PsiElement(HaskellTokenType...)('..')
              PsiElement(HaskellTokenType.])(']')
        HaskellFunorpatdeclImpl(FUNORPATDECL)
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('ys')
          HaskellRhsImpl(RHS)
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              PsiElement(HaskellTokenType.[)('[')
              HaskellExpImpl(EXP)
                PsiElement(HaskellTokenType.integertoken)('1')
              PsiElement(HaskellTokenType...)('..')
              HaskellExpImpl(EXP)
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('x')
              PsiElement(HaskellTokenType.])(']')
        HaskellFunorpatdeclImpl(FUNORPATDECL)
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('zs')
          HaskellRhsImpl(RHS)
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              PsiElement(HaskellTokenType.[)('[')
              HaskellExpImpl(EXP)
                PsiElement(HaskellTokenType.integertoken)('1')
              PsiElement(HaskellTokenType.,)(',')
              HaskellExpImpl(EXP)
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('x')
              PsiElement(HaskellTokenType...)('..')
              PsiElement(HaskellTokenType.])(']')
        HaskellFunorpatdeclImpl(FUNORPATDECL)
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('zs'')
          HaskellRhsImpl(RHS)
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              PsiElement(HaskellTokenType.[)('[')
              HaskellExpImpl(EXP)
                PsiElement(HaskellTokenType.integertoken)('1')
              PsiElement(HaskellTokenType.,)(',')
              HaskellExpImpl(EXP)
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('x')
              PsiElement(HaskellTokenType...)('..')
              HaskellExpImpl(EXP)
                PsiElement(HaskellTokenType.()('(')
                HaskellExpImpl(EXP)
                  PsiElement(HaskellTokenType.integertoken)('30')
                  HaskellQopImpl(QOP)
                    HaskellQvaropImpl(QVAROP)
                      HaskellQvarsymImpl(QVARSYM)
                        HaskellVarsymImpl(VARSYM)
                          PsiElement(HaskellTokenType.*)('*')
                  HaskellQvarImpl(QVAR)
                    HaskellQvaridImpl(QVARID)
                      HaskellVaridImpl(VARID)
                        PsiElement(HaskellTokenType.varidRegexp)('x')
                PsiElement(HaskellTokenType.))(')')
              PsiElement(HaskellTokenType.])(']')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('h')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('xs')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          PsiElement(HaskellTokenType.[)('[')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('y')
          PsiElement(HaskellTokenType.|)('|')
          HaskellPatImpl(PAT)
            HaskellQconImpl(QCON)
              HaskellQconidImpl(QCONID)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('Just')
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('y')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.])(']')
          HaskellQopImpl(QOP)
            HaskellQvaropImpl(QVAROP)
              HaskellQvarsymImpl(QVARSYM)
                HaskellVarsymImpl(VARSYM)
                  PsiElement(HaskellTokenType.Varsym)('++')
          PsiElement(HaskellTokenType.[)('[')
          HaskellExpImpl(EXP)
            PsiElement(HaskellTokenType.()('(')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('y')
            PsiElement(HaskellTokenType.,)(',')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('z')
            PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.|)('|')
          HaskellPatImpl(PAT)
            HaskellQconImpl(QCON)
              HaskellQconidImpl(QCONID)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('Just')
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('y')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.|)('|')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('z')
          PsiElement(HaskellTokenType.<-)('<-')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.])(']')