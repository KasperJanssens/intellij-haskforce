Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE LambdaCase ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE MultiWayIf ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE RecursiveDo ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE ImplicitParams ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE DataKinds ')
    PsiElement(HaskellTokenType.#-})('#-}')
  PsiElement(HaskellTokenType.module)('module')
  HaskellQconidImpl(QCONID)
    PsiElement(HaskellTokenType.conid)('Fun00011')
  PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    PsiElement(HaskellTokenType.data)('data')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('ICon')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellQconsymImpl(QCONSYM)
      HaskellConsymImpl(CONSYM)
        PsiElement(HaskellTokenType.:)(':')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.>)('>')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('b')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('undefined')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('g')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('b')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('g')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('foo')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.>)('>')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.>)('>')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.=)('=')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.\)('\')
    PsiElement(HaskellTokenType.case)('case')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.{)('{')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Just')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.;)(';')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Nothing')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    PsiElement(HaskellTokenType.integertoken)('12')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.})('}')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('h')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    PsiElement(HaskellTokenType.if)('if')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('True')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    PsiElement(HaskellTokenType.integertoken)('12')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('False')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    PsiElement(HaskellTokenType.integertoken)('9')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('i')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('mdo')
    PsiElement(HaskellTokenType.integertoken)('7')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('sort')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.?)('?')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('cmp')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Bool')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=>)('=>')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('sort')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('sortBy')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.?)('?')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('cmp')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('clearPage')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('ArrPtr')
    PsiElement(HaskellTokenType.integertoken)('4096')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Word8')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('IO')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('clearPage')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('ArrPtr')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('p')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('undefined')
    PsiElement(HaskellTokenType.instance)('instance')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Has')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Point')
    HaskellPstringtokenImpl(PSTRINGTOKEN)
      PsiElement(HaskellTokenType.")('"')
      PsiElement(HaskellTokenType.STRINGTOKEN)('x')
      PsiElement(HaskellTokenType.")('"')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Int')
    PsiElement(HaskellTokenType.where)('where')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('from')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Point')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
    PsiElement(HaskellTokenType.varidRegexp)('_')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.varidRegexp)('_')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('x')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('y1')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('undefined')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Y')
  PsiErrorElement:<cpp>, <qconsym>, <qvarid>, <qvarsym>, <reservedop>, <special>, <whitechar>, HaskellTokenType.", HaskellTokenType.., HaskellTokenType.`, HaskellTokenType.as, HaskellTokenType.case, HaskellTokenType.chartoken, HaskellTokenType.class, HaskellTokenType.comment, HaskellTokenType.conid, HaskellTokenType.data, HaskellTokenType.default, HaskellTokenType.deriving, HaskellTokenType.do, HaskellTokenType.else, HaskellTokenType.export, HaskellTokenType.floattoken, HaskellTokenType.foreign, HaskellTokenType.haddock, HaskellTokenType.if, HaskellTokenType.import, HaskellTokenType.in, HaskellTokenType.infix, HaskellTokenType.infixl, HaskellTokenType.infixr, HaskellTokenType.instance, HaskellTokenType.integertoken, HaskellTokenType.let, HaskellTokenType.newtype, HaskellTokenType.of, HaskellTokenType.then, HaskellTokenType.type, HaskellTokenType.where, HaskellTokenType.{-, HaskellTokenType.{-# or _ expected, got '''
    PsiElement(HaskellTokenType.')(''')
  PsiElement(HaskellTokenType.()('(')
  PsiElement(HaskellTokenType.))(')')