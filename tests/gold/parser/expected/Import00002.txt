Haskell File
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Import00002')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellImpdeclImpl(IMPDECL)
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      HaskellQconidImpl(QCONID)
        PsiElement(HaskellTokenType.conidRegexp)('Prelude')
      PsiElement(HaskellTokenType.hiding)('hiding')
      PsiElement(HaskellTokenType.()('(')
      HaskellImporttImpl(IMPORTT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('zipWith')
      PsiElement(HaskellTokenType.,)(',')
      HaskellImporttImpl(IMPORTT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('head')
      PsiElement(HaskellTokenType.))(')')
    HaskellImpdeclImpl(IMPDECL)
      PsiElement(HaskellTokenType.import)('import')
      HaskellQconidImpl(QCONID)
        HaskellModulePrefixImpl(MODULE_PREFIX)
          PsiElement(HaskellTokenType.conidRegexp)('Data')
          PsiElement(HaskellTokenType..)('.')
        PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.()('(')
      HaskellImporttImpl(IMPORTT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('fromMaybe')
      PsiElement(HaskellTokenType.,)(',')
      HaskellImporttImpl(IMPORTT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('isJust')
      PsiElement(HaskellTokenType.))(')')
    HaskellImpdeclImpl(IMPDECL)
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      HaskellQconidImpl(QCONID)
        HaskellModulePrefixImpl(MODULE_PREFIX)
          PsiElement(HaskellTokenType.conidRegexp)('Data')
          PsiElement(HaskellTokenType..)('.')
        PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.()('(')
      HaskellImporttImpl(IMPORTT)
        HaskellTyconImpl(TYCON)
          HaskellConidImpl(CONID)
            PsiElement(HaskellTokenType.conidRegexp)('Maybe')
        PsiElement(HaskellTokenType.()('(')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
    HaskellImpdeclImpl(IMPDECL)
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      HaskellQconidImpl(QCONID)
        PsiElement(HaskellTokenType.conidRegexp)('Prelude')
      PsiElement(HaskellTokenType.as)('as')
      HaskellQconidImpl(QCONID)
        PsiElement(HaskellTokenType.conidRegexp)('P')
    HaskellDatadeclImpl(DATADECL)
      PsiElement(HaskellTokenType.data)('data')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('Maybe2')
        HaskellAtypeImpl(ATYPE)
          HaskellTyvarImpl(TYVAR)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.=)('=')
      HaskellConstrImpl(CONSTR)
        HaskellConImpl(CON)
          PsiElement(HaskellTokenType.conidRegexp)('Just2')
        HaskellAtypeImpl(ATYPE)
          HaskellTyvarImpl(TYVAR)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.|)('|')
      HaskellConstrImpl(CONSTR)
        HaskellConImpl(CON)
          PsiElement(HaskellTokenType.conidRegexp)('Nothing2')
    HaskellGendeclImpl(GENDECL)
      HaskellVarsImpl(VARS)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('dropBitMask')
      PsiElement(HaskellTokenType.::)('::')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellModulePrefixImpl(MODULE_PREFIX)
                  PsiElement(HaskellTokenType.conidRegexp)('B')
                  PsiElement(HaskellTokenType..)('.')
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('ByteString')
          PsiElement(HaskellTokenType.->)('->')
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellOqtyconImpl(OQTYCON)
                HaskellQtyconImpl(QTYCON)
                  HaskellModulePrefixImpl(MODULE_PREFIX)
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                    PsiElement(HaskellTokenType..)('.')
                  HaskellTyconImpl(TYCON)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('ByteString')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('dropBitMask')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('xs')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('go')
          PsiElement(HaskellTokenType.()('(')
          HaskellExpImpl(EXP)
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellModulePrefixImpl(MODULE_PREFIX)
                  PsiElement(HaskellTokenType.conidRegexp)('B')
                  PsiElement(HaskellTokenType..)('.')
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('breakSubstring')
            HaskellPstringtokenImpl(PSTRINGTOKEN)
              PsiElement(HaskellTokenType.")('"')
              PsiElement(HaskellTokenType.STRINGTOKEN)('here')
              PsiElement(HaskellTokenType.")('"')
            HaskellQvarImpl(QVAR)
              HaskellQvaridImpl(QVARID)
                HaskellVaridImpl(VARID)
                  PsiElement(HaskellTokenType.varidRegexp)('xs')
          PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.[)('[')
          PsiElement(HaskellTokenType.])(']')
        PsiElement(HaskellTokenType.where)('where')
        HaskellFunorpatdeclImpl(FUNORPATDECL)
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('comma')
          HaskellRhsImpl(RHS)
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellModulePrefixImpl(MODULE_PREFIX)
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                    PsiElement(HaskellTokenType..)('.')
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('pack')
              HaskellPstringtokenImpl(PSTRINGTOKEN)
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)(',')
                PsiElement(HaskellTokenType.")('"')
        HaskellFunorpatdeclImpl(FUNORPATDECL)
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('rparen')
          HaskellRhsImpl(RHS)
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellModulePrefixImpl(MODULE_PREFIX)
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                    PsiElement(HaskellTokenType..)('.')
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('pack')
              HaskellPstringtokenImpl(PSTRINGTOKEN)
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)(')')
                PsiElement(HaskellTokenType.")('"')
        HaskellFunorpatdeclImpl(FUNORPATDECL)
          HaskellVaridImpl(VARID)
            PsiElement(HaskellTokenType.varidRegexp)('go')
          PsiElement(HaskellTokenType.()('(')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('h')
          PsiElement(HaskellTokenType.,)(',')
          HaskellPatImpl(PAT)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('t')
          PsiElement(HaskellTokenType.))(')')
          HaskellVaridImpl(VARID)
            PsiElement(HaskellTokenType.varidRegexp)('acc')
          HaskellRhsImpl(RHS)
            PsiElement(HaskellTokenType.|)('|')
            HaskellGuardImpl(GUARD)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellModulePrefixImpl(MODULE_PREFIX)
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                    PsiElement(HaskellTokenType..)('.')
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('null')
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('t')
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellModulePrefixImpl(MODULE_PREFIX)
                    PsiElement(HaskellTokenType.conidRegexp)('B')
                    PsiElement(HaskellTokenType..)('.')
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('append')
              PsiElement(HaskellTokenType.()('(')
              HaskellExpImpl(EXP)
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellModulePrefixImpl(MODULE_PREFIX)
                      PsiElement(HaskellTokenType.conidRegexp)('B')
                      PsiElement(HaskellTokenType..)('.')
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('concat')
                HaskellQopImpl(QOP)
                  HaskellQvaropImpl(QVAROP)
                    HaskellQvarsymImpl(QVARSYM)
                      HaskellVarsymImpl(VARSYM)
                        PsiElement(HaskellTokenType.$)('$')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('reverse')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('acc')
              PsiElement(HaskellTokenType.))(')')
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('h')
            PsiElement(HaskellTokenType.|)('|')
            HaskellGuardImpl(GUARD)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('otherwise')
            PsiElement(HaskellTokenType.=)('=')
            HaskellExpImpl(EXP)
              HaskellQvarImpl(QVAR)
                HaskellQvaridImpl(QVARID)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('go')
              PsiElement(HaskellTokenType.()('(')
              HaskellExpImpl(EXP)
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellModulePrefixImpl(MODULE_PREFIX)
                      PsiElement(HaskellTokenType.conidRegexp)('B')
                      PsiElement(HaskellTokenType..)('.')
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('breakSubstring')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('wrd')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('rest')
              PsiElement(HaskellTokenType.))(')')
              PsiElement(HaskellTokenType.()('(')
              HaskellExpImpl(EXP)
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('rparen')
                HaskellQopImpl(QOP)
                  HaskellQvaropImpl(QVAROP)
                    HaskellQvarsymImpl(QVARSYM)
                      HaskellVarsymImpl(VARSYM)
                        PsiElement(HaskellTokenType.:)(':')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.as)('as')
                HaskellQopImpl(QOP)
                  HaskellQvaropImpl(QVAROP)
                    HaskellQvarsymImpl(QVARSYM)
                      HaskellVarsymImpl(VARSYM)
                        PsiElement(HaskellTokenType.:)(':')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('wrd')
                HaskellQopImpl(QOP)
                  HaskellQvaropImpl(QVAROP)
                    HaskellQvarsymImpl(QVARSYM)
                      HaskellVarsymImpl(VARSYM)
                        PsiElement(HaskellTokenType.:)(':')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('h')
                HaskellQopImpl(QOP)
                  HaskellQvaropImpl(QVAROP)
                    HaskellQvarsymImpl(QVARSYM)
                      HaskellVarsymImpl(VARSYM)
                        PsiElement(HaskellTokenType.:)(':')
                HaskellQvarImpl(QVAR)
                  HaskellQvaridImpl(QVARID)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('acc')
              PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.where)('where')
            HaskellFunorpatdeclImpl(FUNORPATDECL)
              HaskellPatImpl(PAT)
                PsiElement(HaskellTokenType.()('(')
                HaskellPatImpl(PAT)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.as)('as')
                PsiElement(HaskellTokenType.,)(',')
                HaskellPatImpl(PAT)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('rest')
                PsiElement(HaskellTokenType.))(')')
              HaskellRhsImpl(RHS)
                PsiElement(HaskellTokenType.=)('=')
                HaskellExpImpl(EXP)
                  HaskellQvarImpl(QVAR)
                    HaskellQvaridImpl(QVARID)
                      HaskellVaridImpl(VARID)
                        PsiElement(HaskellTokenType.varidRegexp)('fixArg')
                  PsiElement(HaskellTokenType.()('(')
                  HaskellExpImpl(EXP)
                    HaskellQvarImpl(QVAR)
                      HaskellQvaridImpl(QVARID)
                        HaskellModulePrefixImpl(MODULE_PREFIX)
                          PsiElement(HaskellTokenType.conidRegexp)('B')
                          PsiElement(HaskellTokenType..)('.')
                        HaskellVaridImpl(VARID)
                          PsiElement(HaskellTokenType.varidRegexp)('span')
                    PsiElement(HaskellTokenType.()('(')
                    HaskellQopImpl(QOP)
                      HaskellQvaropImpl(QVAROP)
                        HaskellQvarsymImpl(QVARSYM)
                          HaskellVarsymImpl(VARSYM)
                            PsiElement(HaskellTokenType.Varsym)('/=')
                    PsiElement(HaskellTokenType.chartoken)('';'')
                    PsiElement(HaskellTokenType.))(')')
                    HaskellQopImpl(QOP)
                      HaskellQvaropImpl(QVAROP)
                        HaskellQvarsymImpl(QVARSYM)
                          HaskellVarsymImpl(VARSYM)
                            PsiElement(HaskellTokenType.$)('$')
                    HaskellQvarImpl(QVAR)
                      HaskellQvaridImpl(QVARID)
                        HaskellModulePrefixImpl(MODULE_PREFIX)
                          PsiElement(HaskellTokenType.conidRegexp)('B')
                          PsiElement(HaskellTokenType..)('.')
                        HaskellVaridImpl(VARID)
                          PsiElement(HaskellTokenType.varidRegexp)('drop')
                    PsiElement(HaskellTokenType.()('(')
                    HaskellExpImpl(EXP)
                      HaskellQvarImpl(QVAR)
                        HaskellQvaridImpl(QVARID)
                          HaskellModulePrefixImpl(MODULE_PREFIX)
                            PsiElement(HaskellTokenType.conidRegexp)('B')
                            PsiElement(HaskellTokenType..)('.')
                          HaskellVaridImpl(VARID)
                            PsiElement(HaskellTokenType.varidRegexp)('length')
                      HaskellQvarImpl(QVAR)
                        HaskellQvaridImpl(QVARID)
                          HaskellVaridImpl(VARID)
                            PsiElement(HaskellTokenType.varidRegexp)('wrd')
                    PsiElement(HaskellTokenType.))(')')
                    HaskellQvarImpl(QVAR)
                      HaskellQvaridImpl(QVARID)
                        HaskellVaridImpl(VARID)
                          PsiElement(HaskellTokenType.varidRegexp)('t')
                  PsiElement(HaskellTokenType.))(')')