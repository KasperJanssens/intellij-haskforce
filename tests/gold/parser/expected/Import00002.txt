Haskell File
  PsiElement(HaskellTokenType.module)('module')
  HaskellQconidImpl(QCONID)
    PsiElement(HaskellTokenType.conidRegexp)('Import00002')
  PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    HaskellImpdeclImpl(IMPDECL)
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      HaskellQconidImpl(QCONID)
        PsiElement(HaskellTokenType.conidRegexp)('Prelude')
      PsiElement(HaskellTokenType.hiding)('hiding')
      PsiElement(HaskellTokenType.()('(')
      HaskellImporttImpl(IMPORTT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('zipWith')
      PsiElement(HaskellTokenType.,)(',')
      HaskellImporttImpl(IMPORTT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('head')
      PsiElement(HaskellTokenType.))(')')
    HaskellImpdeclImpl(IMPDECL)
      PsiElement(HaskellTokenType.import)('import')
      HaskellQconidImpl(QCONID)
        HaskellModulePrefixImpl(MODULE_PREFIX)
          PsiElement(HaskellTokenType.conidRegexp)('Data')
          PsiElement(HaskellTokenType..)('.')
        PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.()('(')
      HaskellImporttImpl(IMPORTT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('fromMaybe')
      PsiElement(HaskellTokenType.,)(',')
      HaskellImporttImpl(IMPORTT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('isJust')
      PsiElement(HaskellTokenType.))(')')
    HaskellImpdeclImpl(IMPDECL)
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      HaskellQconidImpl(QCONID)
        HaskellModulePrefixImpl(MODULE_PREFIX)
          PsiElement(HaskellTokenType.conidRegexp)('Data')
          PsiElement(HaskellTokenType..)('.')
        PsiElement(HaskellTokenType.conidRegexp)('Maybe')
      PsiElement(HaskellTokenType.()('(')
      HaskellImporttImpl(IMPORTT)
        HaskellTyconImpl(TYCON)
          HaskellConidImpl(CONID)
            PsiElement(HaskellTokenType.conidRegexp)('Maybe')
        PsiElement(HaskellTokenType.()('(')
        PsiElement(HaskellTokenType...)('..')
        PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.))(')')
    HaskellImpdeclImpl(IMPDECL)
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      HaskellQconidImpl(QCONID)
        PsiElement(HaskellTokenType.conidRegexp)('Prelude')
      PsiElement(HaskellTokenType.as)('as')
      HaskellQconidImpl(QCONID)
        PsiElement(HaskellTokenType.conidRegexp)('P')
    PsiElement(HaskellTokenType.data)('data')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Maybe2')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Just2')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Nothing2')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('dropBitMask')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellQconidImpl(QCONID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      PsiElement(HaskellTokenType.conidRegexp)('ByteString')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellQconidImpl(QCONID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      PsiElement(HaskellTokenType.conidRegexp)('ByteString')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('dropBitMask')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('xs')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('go')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('breakSubstring')
    HaskellPstringtokenImpl(PSTRINGTOKEN)
      PsiElement(HaskellTokenType.")('"')
      PsiElement(HaskellTokenType.STRINGTOKEN)('here')
      PsiElement(HaskellTokenType.")('"')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('xs')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.[)('[')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.])(']')
    PsiElement(HaskellTokenType.where)('where')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('comma')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('pack')
    HaskellPstringtokenImpl(PSTRINGTOKEN)
      PsiElement(HaskellTokenType.")('"')
      PsiElement(HaskellTokenType.STRINGTOKEN)(',')
      PsiElement(HaskellTokenType.")('"')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('rparen')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('pack')
    HaskellPstringtokenImpl(PSTRINGTOKEN)
      PsiElement(HaskellTokenType.")('"')
      PsiElement(HaskellTokenType.STRINGTOKEN)(')')
      PsiElement(HaskellTokenType.")('"')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('go')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('h')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('t')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('acc')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('null')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('t')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('append')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('concat')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.$)('$')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('reverse')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('acc')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('h')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.|)('|')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('otherwise')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('go')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('breakSubstring')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('wrd')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('rest')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('rparen')
    HaskellSymbolImpl(SYMBOL)
      PsiElement(HaskellTokenType.:)(':')
    PsiElement(HaskellTokenType.as)('as')
    HaskellSymbolImpl(SYMBOL)
      PsiElement(HaskellTokenType.:)(':')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('wrd')
    HaskellSymbolImpl(SYMBOL)
      PsiElement(HaskellTokenType.:)(':')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('h')
    HaskellSymbolImpl(SYMBOL)
      PsiElement(HaskellTokenType.:)(':')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('acc')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.where)('where')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    PsiElement(HaskellTokenType.as)('as')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('rest')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('fixArg')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('span')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType./)('/')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.=)('=')
    PsiElement(HaskellTokenType.chartoken)('';'')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.$)('$')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('drop')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellModulePrefixImpl(MODULE_PREFIX)
        PsiElement(HaskellTokenType.conidRegexp)('B')
        PsiElement(HaskellTokenType..)('.')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('length')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('wrd')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('t')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')