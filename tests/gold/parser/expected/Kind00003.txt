Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE DataKinds ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE KindSignatures ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE GADTs ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE TypeOperators ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Kind00003')
    PsiElement(HaskellTokenType.where)('where')
  PsiComment(HaskellTokenType.{-)('{-')
  PsiComment(HaskellTokenType.commenttext)('\n')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)(' FIXME: Waiting on https://github.com/haskell')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('suite/haskell')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('src')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('exts/issues/125\ndata HList :: [*] ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> * where\n  HNil  :: HList '[]\n  HCons :: a ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> HList t ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> HList (a ': t)\n\n')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)(' FIXME: Waiting on https://github.com/haskell')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('suite/haskell')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('src')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('exts/issues/124\ndata Tuple :: (*,*) ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> * where\n  Tuple :: a ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> b ')
  PsiComment(HaskellTokenType.commenttext)('-')
  PsiComment(HaskellTokenType.commenttext)('> Tuple '(a,b)\n')
  PsiComment(HaskellTokenType.-})('-}')
  HaskellBodyImpl(BODY)
    HaskellClassdeclImpl(CLASSDECL)
      PsiElement(HaskellTokenType.class)('class')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('C1')
          HaskellAtypeImpl(ATYPE)
            PsiElement(HaskellTokenType.()('(')
            HaskellCtypeImpl(CTYPE)
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellTyvarImpl(TYVAR)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.::)('::')
            HaskellKindImpl(KIND)
              HaskellBkindImpl(BKIND)
                HaskellAkindImpl(AKIND)
                  HaskellQtyconImpl(QTYCON)
                    HaskellTyconImpl(TYCON)
                      HaskellConidImpl(CONID)
                        PsiElement(HaskellTokenType.conidRegexp)('Bool')
            PsiComment(HaskellTokenType.{-)('{-')
            PsiComment(HaskellTokenType.commenttext)(' 1 ')
            PsiComment(HaskellTokenType.-})('-}')
            PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.where)('where')
      HaskellCdeclImpl(CDECL)
        HaskellGendeclImpl(GENDECL)
          HaskellVarsImpl(VARS)
            HaskellVaridImpl(VARID)
              PsiElement(HaskellTokenType.varidRegexp)('c')
          PsiElement(HaskellTokenType.::)('::')
          HaskellCtypeImpl(CTYPE)
            HaskellTypeeImpl(TYPEE)
              HaskellAtypeImpl(ATYPE)
                HaskellTyvarImpl(TYVAR)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('proxy')
              HaskellAtypeImpl(ATYPE)
                HaskellTyvarImpl(TYVAR)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellOqtyconImpl(OQTYCON)
                    HaskellQtyconImpl(QTYCON)
                      HaskellTyconImpl(TYCON)
                        HaskellConidImpl(CONID)
                          PsiElement(HaskellTokenType.conidRegexp)('Int')
    HaskellClassdeclImpl(CLASSDECL)
      PsiElement(HaskellTokenType.class)('class')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('C2')
          HaskellAtypeImpl(ATYPE)
            PsiElement(HaskellTokenType.()('(')
            HaskellCtypeImpl(CTYPE)
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellTyvarImpl(TYVAR)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.::)('::')
            HaskellKindImpl(KIND)
              HaskellBkindImpl(BKIND)
                HaskellAkindImpl(AKIND)
                  PsiElement(HaskellTokenType.[)('[')
                  HaskellKindImpl(KIND)
                    HaskellBkindImpl(BKIND)
                      HaskellAkindImpl(AKIND)
                        PsiElement(HaskellTokenType.*)('*')
                  PsiElement(HaskellTokenType.])(']')
            PsiElement(HaskellTokenType.))(')')
    HaskellClassdeclImpl(CLASSDECL)
      PsiElement(HaskellTokenType.class)('class')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('C3')
          HaskellAtypeImpl(ATYPE)
            PsiElement(HaskellTokenType.()('(')
            HaskellCtypeImpl(CTYPE)
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellTyvarImpl(TYVAR)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.::)('::')
            HaskellKindImpl(KIND)
              HaskellBkindImpl(BKIND)
                HaskellAkindImpl(AKIND)
                  PsiElement(HaskellTokenType.[)('[')
                  HaskellKindImpl(KIND)
                    HaskellBkindImpl(BKIND)
                      HaskellAkindImpl(AKIND)
                        PsiElement(HaskellTokenType.()('(')
                        HaskellKindImpl(KIND)
                          HaskellBkindImpl(BKIND)
                            HaskellAkindImpl(AKIND)
                              HaskellQtyconImpl(QTYCON)
                                HaskellTyconImpl(TYCON)
                                  HaskellConidImpl(CONID)
                                    PsiElement(HaskellTokenType.conidRegexp)('Int')
                        PsiElement(HaskellTokenType.,)(',')
                        HaskellKindImpl(KIND)
                          HaskellBkindImpl(BKIND)
                            HaskellAkindImpl(AKIND)
                              HaskellQtyconImpl(QTYCON)
                                HaskellTyconImpl(TYCON)
                                  HaskellConidImpl(CONID)
                                    PsiElement(HaskellTokenType.conidRegexp)('Double')
                        PsiElement(HaskellTokenType.))(')')
                  PsiElement(HaskellTokenType.])(']')
            PsiElement(HaskellTokenType.))(')')
    HaskellClassdeclImpl(CLASSDECL)
      PsiElement(HaskellTokenType.class)('class')
      HaskellCtypeImpl(CTYPE)
        HaskellTypeeImpl(TYPEE)
          HaskellAtypeImpl(ATYPE)
            HaskellOqtyconImpl(OQTYCON)
              HaskellQtyconImpl(QTYCON)
                HaskellTyconImpl(TYCON)
                  HaskellConidImpl(CONID)
                    PsiElement(HaskellTokenType.conidRegexp)('C4')
          HaskellAtypeImpl(ATYPE)
            PsiElement(HaskellTokenType.()('(')
            HaskellCtypeImpl(CTYPE)
              HaskellTypeeImpl(TYPEE)
                HaskellAtypeImpl(ATYPE)
                  HaskellTyvarImpl(TYVAR)
                    HaskellVaridImpl(VARID)
                      PsiElement(HaskellTokenType.varidRegexp)('a')
            PsiElement(HaskellTokenType.::)('::')
            HaskellKindImpl(KIND)
              HaskellBkindImpl(BKIND)
                HaskellAkindImpl(AKIND)
                  PsiElement(HaskellTokenType.()('(')
                  HaskellKindImpl(KIND)
                    HaskellBkindImpl(BKIND)
                      HaskellAkindImpl(AKIND)
                        PsiElement(HaskellTokenType.*)('*')
                  PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.))(')')
    HaskellDatadeclImpl(DATADECL)
      PsiElement(HaskellTokenType.data)('data')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('X')
        HaskellAtypeImpl(ATYPE)
          PsiElement(HaskellTokenType.()('(')
          HaskellCtypeImpl(CTYPE)
            HaskellTypeeImpl(TYPEE)
              HaskellAtypeImpl(ATYPE)
                HaskellTyvarImpl(TYVAR)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.::)('::')
          HaskellKindImpl(KIND)
            HaskellBkindImpl(BKIND)
              HaskellAkindImpl(AKIND)
                PsiElement(HaskellTokenType.[)('[')
                HaskellKindImpl(KIND)
                  HaskellBkindImpl(BKIND)
                    HaskellAkindImpl(AKIND)
                      PsiElement(HaskellTokenType.*)('*')
                PsiElement(HaskellTokenType.])(']')
          PsiElement(HaskellTokenType.))(')')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('x1')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
          PsiElement(HaskellTokenType.::)('::')
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellOqtyconImpl(OQTYCON)
                HaskellQtyconImpl(QTYCON)
                  HaskellTyconImpl(TYCON)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('X')
            HaskellAtypeImpl(ATYPE)
              PsiElement(HaskellTokenType.')(''')
              PsiElement(HaskellTokenType.[)('[')
              HaskellCtypeImpl(CTYPE)
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    HaskellOqtyconImpl(OQTYCON)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('Int')
              PsiElement(HaskellTokenType.])(']')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('x2')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
          PsiElement(HaskellTokenType.::)('::')
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellOqtyconImpl(OQTYCON)
                HaskellQtyconImpl(QTYCON)
                  HaskellTyconImpl(TYCON)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('X')
            HaskellAtypeImpl(ATYPE)
              PsiElement(HaskellTokenType.')(''')
              PsiElement(HaskellTokenType.[)('[')
              HaskellCtypeImpl(CTYPE)
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    HaskellOqtyconImpl(OQTYCON)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('Int')
              PsiElement(HaskellTokenType.,)(',')
              HaskellCtypeImpl(CTYPE)
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    HaskellOqtyconImpl(OQTYCON)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('Double')
              PsiElement(HaskellTokenType.])(']')
    HaskellDatadeclImpl(DATADECL)
      PsiElement(HaskellTokenType.data)('data')
      HaskellTypeeImpl(TYPEE)
        HaskellAtypeImpl(ATYPE)
          HaskellOqtyconImpl(OQTYCON)
            HaskellQtyconImpl(QTYCON)
              HaskellTyconImpl(TYCON)
                HaskellConidImpl(CONID)
                  PsiElement(HaskellTokenType.conidRegexp)('Y')
        HaskellAtypeImpl(ATYPE)
          PsiElement(HaskellTokenType.()('(')
          HaskellCtypeImpl(CTYPE)
            HaskellTypeeImpl(TYPEE)
              HaskellAtypeImpl(ATYPE)
                HaskellTyvarImpl(TYVAR)
                  HaskellVaridImpl(VARID)
                    PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.::)('::')
          HaskellKindImpl(KIND)
            HaskellBkindImpl(BKIND)
              HaskellAkindImpl(AKIND)
                PsiElement(HaskellTokenType.()('(')
                HaskellKindImpl(KIND)
                  HaskellBkindImpl(BKIND)
                    HaskellAkindImpl(AKIND)
                      PsiElement(HaskellTokenType.*)('*')
                PsiElement(HaskellTokenType.,)(',')
                HaskellKindImpl(KIND)
                  HaskellBkindImpl(BKIND)
                    HaskellAkindImpl(AKIND)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('Bool')
                PsiElement(HaskellTokenType.))(')')
          PsiElement(HaskellTokenType.))(')')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('y1')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
          PsiElement(HaskellTokenType.::)('::')
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellOqtyconImpl(OQTYCON)
                HaskellQtyconImpl(QTYCON)
                  HaskellTyconImpl(TYCON)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('Y')
            HaskellAtypeImpl(ATYPE)
              PsiElement(HaskellTokenType.')(''')
              PsiElement(HaskellTokenType.()('(')
              HaskellCtypeImpl(CTYPE)
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    HaskellOqtyconImpl(OQTYCON)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('Double')
              PsiElement(HaskellTokenType.,)(',')
              HaskellCtypeImpl(CTYPE)
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    HaskellOqtyconImpl(OQTYCON)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('True')
              PsiElement(HaskellTokenType.))(')')
    HaskellFunorpatdeclImpl(FUNORPATDECL)
      HaskellPatImpl(PAT)
        HaskellVaridImpl(VARID)
          PsiElement(HaskellTokenType.varidRegexp)('y2')
      HaskellRhsImpl(RHS)
        PsiElement(HaskellTokenType.=)('=')
        HaskellExpImpl(EXP)
          HaskellQvarImpl(QVAR)
            HaskellQvaridImpl(QVARID)
              HaskellVaridImpl(VARID)
                PsiElement(HaskellTokenType.varidRegexp)('undefined')
          PsiElement(HaskellTokenType.::)('::')
          HaskellTypeeImpl(TYPEE)
            HaskellAtypeImpl(ATYPE)
              HaskellOqtyconImpl(OQTYCON)
                HaskellQtyconImpl(QTYCON)
                  HaskellTyconImpl(TYCON)
                    HaskellConidImpl(CONID)
                      PsiElement(HaskellTokenType.conidRegexp)('Y')
            HaskellAtypeImpl(ATYPE)
              PsiElement(HaskellTokenType.')(''')
              PsiElement(HaskellTokenType.()('(')
              HaskellCtypeImpl(CTYPE)
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    HaskellOqtyconImpl(OQTYCON)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('Double')
              PsiElement(HaskellTokenType.,)(',')
              HaskellCtypeImpl(CTYPE)
                HaskellTypeeImpl(TYPEE)
                  HaskellAtypeImpl(ATYPE)
                    PsiElement(HaskellTokenType.')(''')
                    HaskellOqtyconImpl(OQTYCON)
                      HaskellQtyconImpl(QTYCON)
                        HaskellTyconImpl(TYCON)
                          HaskellConidImpl(CONID)
                            PsiElement(HaskellTokenType.conidRegexp)('False')
              PsiComment(HaskellTokenType.{-)('{-')
              PsiComment(HaskellTokenType.commenttext)('comment')
              PsiComment(HaskellTokenType.-})('-}')
              PsiElement(HaskellTokenType.))(')')