Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE RankNTypes          ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE ScopedTypeVariables ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE StandaloneDeriving  ')
    PsiElement(HaskellTokenType.#-})('#-}')
  PsiElement(HaskellTokenType.module)('module')
  HaskellQconidImpl(QCONID)
    PsiElement(HaskellTokenType.conid)('Fun00007')
  PsiElement(HaskellTokenType.where)('where')
  PsiComment(HaskellTokenType.comment)('-- | Cast a 'Size' to a 'RangeSet'\n')
  HaskellBodyImpl(BODY)
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('sizeToRange')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('forall')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType..)('.')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Type')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=>)('=>')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Size')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('RangeSet')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('sizeToRange')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('sz')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    PsiElement(HaskellTokenType.case)('case')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('typeRep')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.::)('::')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('TypeRep')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('a')
    PsiElement(HaskellTokenType.of)('of')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('IntType')
    PsiElement(HaskellTokenType._)('_')
    PsiElement(HaskellTokenType._)('_')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('RangeSet')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('sz')
    PsiElement(HaskellTokenType._)('_')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.->)('->')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Universal')
    PsiElement(HaskellTokenType.deriving)('deriving')
    PsiElement(HaskellTokenType.instance)('instance')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conid)('Typeable')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')