Haskell File
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('String00005')
    PsiElement(HaskellTokenType.where)('where')
  HaskellBodyImpl(BODY)
    PsiElement(HaskellTokenType.instance)('instance')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Show')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('e')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Show')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=>)('=>')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Show')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('UntypedFeldF')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('e')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('f')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    PsiElement(HaskellTokenType.where)('where')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('show')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Variable')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('v')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('t')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    PsiElement(HaskellTokenType.chartoken)(''m'')
    HaskellSymbolImpl(SYMBOL)
      PsiElement(HaskellTokenType.:)(':')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('show')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('v')
    HaskellQinfixvaridImpl(QINFIXVARID)
      PsiElement(HaskellTokenType.`)('`')
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('append')
      PsiElement(HaskellTokenType.`)('`')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('show')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('t')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('show')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Lambda')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('v')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('e')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')
    HaskellReservedopImpl(RESERVEDOP)
      PsiElement(HaskellTokenType.=)('=')
    HaskellPstringtokenImpl(PSTRINGTOKEN)
      PsiElement(HaskellTokenType.")('"')
      PsiElement(HaskellTokenType.STRINGTOKEN)('(')
      PsiElement(HaskellTokenType.STRINGTOKEN)('\\')
      PsiElement(HaskellTokenType.")('"')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.+)('+')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.+)('+')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('show')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('v')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.+)('+')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.+)('+')
    HaskellPstringtokenImpl(PSTRINGTOKEN)
      PsiElement(HaskellTokenType.")('"')
      PsiElement(HaskellTokenType.STRINGTOKEN)(' -> ')
      PsiElement(HaskellTokenType.")('"')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.+)('+')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.+)('+')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('show')
    HaskellQvaridImpl(QVARID)
      HaskellVaridImpl(VARID)
        PsiElement(HaskellTokenType.varidRegexp)('e')
    HaskellQvarsymImpl(QVARSYM)
      HaskellVarsymImpl(VARSYM)
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.+)('+')
        HaskellSymbolImpl(SYMBOL)
          PsiElement(HaskellTokenType.+)('+')
    HaskellPstringtokenImpl(PSTRINGTOKEN)
      PsiElement(HaskellTokenType.")('"')
      PsiElement(HaskellTokenType.STRINGTOKEN)(')')
      PsiElement(HaskellTokenType.")('"')
    PsiElement(HaskellTokenType.default)('default')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.()('(')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Integer')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.,)(',')
    HaskellQconidImpl(QCONID)
      PsiElement(HaskellTokenType.conidRegexp)('Double')
    HaskellSpecialImpl(SPECIAL)
      PsiElement(HaskellTokenType.))(')')