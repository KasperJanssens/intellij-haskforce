Haskell File
  HaskellPpragmaImpl(PPRAGMA)
    PsiElement(HaskellTokenType.{-#)('{-#')
    PsiElement(HaskellTokenType.PRAGMA)(' LANGUAGE CPP ')
    PsiElement(HaskellTokenType.#-})('#-}')
  HaskellModuledeclImpl(MODULEDECL)
    PsiElement(HaskellTokenType.module)('module')
    HaskellQconidImpl(QCONID)
      HaskellConidImpl(CONID)
        PsiElement(HaskellTokenType.conidRegexp)('CPP00001')
    PsiElement(HaskellTokenType.where)('where')
  PsiComment(HaskellTokenType.CPPIF)('#if __GLASGOW_HASKELL__ < 708')
  PsiComment(HaskellTokenType.CPPDEFINE)('#define DIFFERENT_MONADIO 1')
  PsiComment(HaskellTokenType.CPPDEFINE)('#define MONADIO_INSTANCES 1')
  PsiComment(HaskellTokenType.#endif)('#endif')
  HaskellBodyImpl(BODY)
    <empty list>