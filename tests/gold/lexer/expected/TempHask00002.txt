HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE FlexibleInstances ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE QuasiQuotes       ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE TemplateHaskell   ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conid ('TempHask00002')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.[ ('[')
HaskellTokenType.varidRegexp ('undefined')
HaskellTokenType.| ('|')
WHITE_SPACE ('\n')
HaskellTokenType.varidRegexp ('something')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('here')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('hello world')
HaskellTokenType." ('"')
WHITE_SPACE ('\n')
HaskellTokenType.| ('|')
HaskellTokenType.] (']')