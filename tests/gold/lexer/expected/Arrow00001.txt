HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE Arrows ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Arrow00001')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('e1')
WHITE_SPACE (' ')
VARSYM ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('proc')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n        ')
HaskellTokenType.rec ('rec')
WHITE_SPACE (' ')
HaskellTokenType.let ('let')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('e')
WHITE_SPACE (' ')
VARSYM ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('e')
WHITE_SPACE (' ')
VARSYM ('+')
WHITE_SPACE (' ')
HaskellTokenType.integertoken ('1')
WHITE_SPACE ('\n        ')
HaskellTokenType.varidRegexp ('y')
WHITE_SPACE (' ')
HaskellTokenType.<- ('<-')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('f')
WHITE_SPACE (' ')
VARSYM ('-<')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
VARSYM ('+')
HaskellTokenType.integertoken ('1')
WHITE_SPACE ('\n        ')
HaskellTokenType.varidRegexp ('g')
WHITE_SPACE (' ')
VARSYM ('-<<')
WHITE_SPACE (' ')
HaskellTokenType.integertoken ('2')
VARSYM ('*')
HaskellTokenType.varidRegexp ('y')
WHITE_SPACE ('\n        ')
HaskellTokenType.let ('let')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('z')
WHITE_SPACE (' ')
VARSYM ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
VARSYM ('+')
HaskellTokenType.varidRegexp ('y')
WHITE_SPACE ('\n        ')
HaskellTokenType.varidRegexp ('t')
WHITE_SPACE (' ')
HaskellTokenType.<- ('<-')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('h')
WHITE_SPACE (' ')
VARSYM ('>>-')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
VARSYM ('*')
HaskellTokenType.varidRegexp ('z')
WHITE_SPACE ('\n        ')
HaskellTokenType.varidRegexp ('returnA')
WHITE_SPACE (' ')
VARSYM ('-<')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('t')
VARSYM ('+')
HaskellTokenType.varidRegexp ('z')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('expr'')
WHITE_SPACE (' ')
VARSYM ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('proc')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n                ')
HaskellTokenType.varidRegexp ('returnA')
WHITE_SPACE (' ')
VARSYM ('-<')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
WHITE_SPACE ('\n        ')
VARSYM ('<+>')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n                ')
HaskellTokenType.varidRegexp ('symbol')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Plus')
WHITE_SPACE (' ')
VARSYM ('-<')
WHITE_SPACE (' ')
HaskellTokenType.( ('(')
HaskellTokenType.) (')')
WHITE_SPACE ('\n                ')
HaskellTokenType.varidRegexp ('y')
WHITE_SPACE (' ')
HaskellTokenType.<- ('<-')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('term')
WHITE_SPACE (' ')
VARSYM ('>-')
WHITE_SPACE (' ')
HaskellTokenType.( ('(')
HaskellTokenType.) (')')
WHITE_SPACE ('\n                ')
HaskellTokenType.varidRegexp ('expr'')
WHITE_SPACE (' ')
VARSYM ('-<')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
WHITE_SPACE (' ')
VARSYM ('+')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('y')
WHITE_SPACE ('\n        ')
VARSYM ('<+>')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n                ')
HaskellTokenType.varidRegexp ('symbol')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Minus')
WHITE_SPACE (' ')
VARSYM ('-<')
WHITE_SPACE (' ')
HaskellTokenType.( ('(')
HaskellTokenType.) (')')
WHITE_SPACE ('\n                ')
HaskellTokenType.varidRegexp ('y')
WHITE_SPACE (' ')
HaskellTokenType.<- ('<-')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('term')
WHITE_SPACE (' ')
VARSYM ('-<')
WHITE_SPACE (' ')
HaskellTokenType.( ('(')
HaskellTokenType.) (')')
WHITE_SPACE ('\n                ')
HaskellTokenType.varidRegexp ('expr'')
WHITE_SPACE (' ')
VARSYM ('-<')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
WHITE_SPACE (' ')
VARSYM ('-')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('y')