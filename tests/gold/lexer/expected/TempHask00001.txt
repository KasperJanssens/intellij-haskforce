HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conid ('TempHask00001')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('rewriteType')
WHITE_SPACE (' ')
HaskellTokenType.:: ('::')
WHITE_SPACE (' ')
HaskellTokenType.conid ('Type')
WHITE_SPACE (' ')
HaskellTokenType.-> ('->')
WHITE_SPACE (' ')
HaskellTokenType.conid ('Q')
WHITE_SPACE (' ')
HaskellTokenType.conid ('Type')
WHITE_SPACE ('\n')
HaskellTokenType.varidRegexp ('rewriteType')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('t')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('applyTF')
WHITE_SPACE (' ')
HaskellTokenType.'' ('''')
HaskellTokenType.conid ('Internal')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('t')
WHITE_SPACE (' ')
HaskellTokenType.> ('>')
HaskellTokenType.> ('>')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('expandTF')