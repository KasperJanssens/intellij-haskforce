HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Layout00019')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.varidRegexp ('f')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('x')
WHITE_SPACE (' ')
VARSYM ('=')
WHITE_SPACE ('  ')
HaskellTokenType.varidRegexp ('maybeEP')
WHITE_SPACE (' ')
HaskellTokenType.( ('(')
VARSYM ('\')
HaskellTokenType.varidRegexp ('ids')
WHITE_SPACE (' ')
VARSYM ('->')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n                  ')
HaskellTokenType.varidRegexp ('layoutList')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('pts'')
WHITE_SPACE (' ')
VARSYM ('$')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('sepInstFunBinds')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('ids')
WHITE_SPACE ('\n                  ')
HaskellTokenType.) (')')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('mids')