HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE QuasiQuotes ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('TempHask00003')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic leftbrace ('')
HaskellTokenType.varidRegexp ('str')
WHITE_SPACE (' ')
HaskellTokenType.:: ('::')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('String')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.varidRegexp ('str')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.[ ('[')
HaskellTokenType.varidRegexp ('here')
HaskellTokenType.| ('|')
HaskellTokenType.varidRegexp ('test')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.varidRegexp ('test')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.varidRegexp ('test')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('test')
WHITE_SPACE (' ')
HaskellTokenType.|] ('|]')
HaskellTokenType.Synthetic rightbrace ('')